import numpy as npimport matplotlib.pyplot as pltfrom copy import deepcopyclass Plot:        def __init__(self, variables, priors, bins, axrange=None, mo_option=False):        self.variables = variables        self.priors = priors        self.bins = bins        self.axrange = axrange        self.mo_option = mo_option        self.nvar = len(self.variables)                        if(self.nvar==1):            self.hist, self.edges = np.histogram([], self.bins, self.axrange)        elif(self.nvar==2):            self.hist, self.edgesx, self.edgesy = np.histogram2d([], [],self.bins, self.axrange)        else:            print("too many or too few variables!")            return                self.hist_interval = []            def fill_plot(self, data, weights=None):        if(self.nvar==1):            hist, edges = np.histogram(data, self.bins, self.axrange, weights = weights)            self.hist += hist        elif(self.nvar==2):            hist, edgesx, edgesy = np.histogram2d(data[0,:], data[1,:], self.bins, self.axrange, weights = weights)            self.hist += hist                def draw_plot(self):        if(self.nvar==1):            plt.stairs(self.hist,self.edges)            plt.savefig("test1d.pdf")        if(self.nvar==2):            plt.pcolormesh(self.edgesx, self.edgesy, self.hist.T)            plt.savefig("test2d.pdf")            def make_intervals(self,levels):        self.levels = np.sort(levels)        for level in levels:            print(level)            self.__make_interval(level)            def __make_interval(self,level):        total = np.sum(self.hist)        temp_hist = deepcopy(self.hist)        intervalsum=0        max_index = np.argmax(temp_hist,keepdims=True)        print(np.unravel_index(max_index, temp_hist.shape))        # while intervalsum/total < level:        #     max_index = np.argmax(temp_hist,keepdims=True)        #     intervalsum+= temp_hist[max_index]        #     temp_hist[max_index]=0